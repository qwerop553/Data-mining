library(tidyverse)
library(caret)
library(tm) # 텍스트마이닝 라이브러리
library(extrafont)
sms_raw <- read.csv("sms_spam.csv")
sms_raw$type <- factor(sms_raw$type)
# 비정형화 되어 있는 텍스트를 정형화 함
sms_corpus <- Corpus(VectorSource(sms_raw$text))
View(sms_corpus)
sms_corpus_clean <- sms_corpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
sms_corpus
sms_corpus_clean <- sms_corpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
sms_corpus_clean <- sms_corpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
sms_corpus_clean <- sms_corpus %>%
tm_map(content_transformer(tolower)) %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
sms_corpus_clean <- sms_corpus %>%
tm_map(content_transformer(tolower))
sms_corpus_clean <- sms_corpus %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
sms_corpus_clean <- sms_corpus_clean %>% tm_map(content_transformer(kind='en'))
sms_corpus_clean <- sms_corpus_clean %>% tm_map(content_transformer(tolower))
sms_raw <- read.csv("sms_spam.csv")
sms_raw$type <- factor(sms_raw$type)
sms_raw$type <- factor(sms_raw$type)
# 비정형화 되어 있는 텍스트를 정형화 함
sms_corpus <- Corpus(VectorSource(sms_raw$text))
sms_corpus_clean <- sms_corpus %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind="en")) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
# 3. 기계학습 모형 ----
## 3.1 훈련/검증 데이터 ----
train_index <- createDataPartition(sms_raw$type, p=0.75, list=FALSE)
sms_raw_train <- sms_raw[train_index,]
sms_raw_test <- sms_raw[-train_index,]
## 3.2. 모형설계행렬 ----
### 발생 건수가 5건 이상인것만 추출
# document term matrix
sms_dtm <- DocumentTermMatrix(sms_corpus_clean)
sms_dtm
sms_corpus_clean_train <- sms_corpus_train %>%
tm_map(content_transformer(tolower))
sms_corpus_train <- Corpus(VectorSource(sms_raw$text))
sms_corpus_clean_train <- sms_corpus_train %>%
tm_map(content_transformer(tolower))
sms_corpus_train <- Corpus(VectorSource(sms_raw$text))
sms_corpus_clean_train <- sms_corpus_train %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind='en')) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
sms_corpus_test <- Corpus(VectorSource(sms_raw$text))
sms_corpus_clean_test <- sms_corpus_test %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind='en')) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
# 학습모델의 입력 데이터 만들기
sms_dtm <- DocumentTermMatrix(sms_corpus_clean)
sms_dtm_train <- DocumentTermMatrix(sms_corpus_train)
sms_dtm_test <- DocumentTermMatrix(sms_corpus_test)
sms_corpus_clean_test <- sms_corpus_test %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind='en')) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
# 학습모델의 입력 데이터 만들기
sms_dtm <- DocumentTermMatrix(sms_corpus_clean)
sms_dtm_train <- DocumentTermMatrix(sms_corpus_train)
sms_dtm_test <- DocumentTermMatrix(sms_corpus_test)
sms_dtm_train <- DocumentTermMatrix(sms_corpus_clean_train)
sms_dtm_test <- DocumentTermMatrix(sms_corpus_clean_test)
sms_corpus_train <- Corpus(VectorSource(sms_raw_train$text))
sms_corpus_clean_train <- sms_corpus_train %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind='en')) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
sms_corpus_test <- Corpus(VectorSource(sms_raw_test$text))
sms_corpus_clean_test <- sms_corpus_test %>%
tm_map(removeNumbers) %>%
tm_map(removeWords, stopwords(kind='en')) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace) %>%
tm_map(content_transformer(tolower))
## 3.2. 모형설계행렬 ----
### 발생 건수가 5건 이상인것만 추출
# document term matrix
sms_dict <- findFreqTerms(sms_dtm_train, lowfreq=5)
# 학습모델의 입력 데이터 만들기
sms_dtm <- DocumentTermMatrix(sms_corpus_clean)
sms_dtm_test <- DocumentTermMatrix(sms_corpus_clean_test)
sms_dtm_train <- DocumentTermMatrix(sms_corpus_clean_train)
## 3.2. 모형설계행렬 ----
### 발생 건수가 5건 이상인것만 추출
# document term matrix
sms_dict <- findFreqTerms(sms_dtm_train, lowfreq=5)
convert_counts <- function(x){
x <- ifelse(x >0, 1, 0)
x <- factor(x, levels = c(0, 1), labels = c("Absent", "Present"))
}
# 행단위로 convert_counts 함수를 적용
sms_train <- sms_train %>% apply(MARGIN=2, FUN=convert_counts)
sms_test <- sms_test %>% apply(MARGIN=2, FUN=convert_counts)
### 참조 사전을 위에서 만든 sms_dict로 사용
sms_train <- DocumentTermMatrix(sms_corpus_clean_train, list(dictionary=sms_dict))
sms_test <- DocumentTermMatrix(sms_corpus_clean_test, list(dictionary=sms_dict))
# 행단위로 convert_counts 함수를 적용
sms_train <- sms_train %>% apply(MARGIN=2, FUN=convert_counts)
sms_test <- sms_test %>% apply(MARGIN=2, FUN=convert_counts)
View(sms_test)
ctrl <- caret::trainControl(method='cv', number=10, repeats=3)
sms_nb_mod <- train(sms_train, sms_raw_train$type, method='nb', trContro=ctrl)
ctrl <- caret::trainControl(method='cv', number=10, repeats=3)
sms_nb_mod <- train(sms_train, sms_raw_train$type, method='nb', trControl=ctrl)
help(train)
# 3.4. 베이즈모형 성능평가 ----
## 새로운 데이터에 대한 spam 여부 결과값
sms_nb_pred <- predict(sms_nb_mod, sms_test)
## 새로운 데이터에 대한 spam 여부 결과값
cm_nb <- confusionMatrix(sms_nb_pred, sms_raw_test$type, positive='spam')
cm_nb
inSpam <- 4/80 * 10/80 * 1/80 * 12/80
inHam <- 1/320 * 14/320 * 9/320 * 23/320
inSPam
inSpam
inHam
inSpam *= (80/400)
inSpam = inSpam * (80/400)
inHam = inHam * (320/400)
inSpam
inHam
inSpam <- a / (a + b)
inHam <- b / (a + b)
a <- inSpam; b <- inHam;
inSpam <- a / (a + b)
inHam <- b / (a + b)
inSpam
inHam
